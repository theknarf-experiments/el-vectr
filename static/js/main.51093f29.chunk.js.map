{"version":3,"sources":["App.tsx","index.tsx"],"names":["dString","drag","initial","x","y","current","Canvas","useState","d","setD","initialState","dragging","setDrag","style","width","height","background","onMouseDown","e","button","stopPropagation","clientX","clientY","onMouseMove","onMouseUp","xmlns","viewBox","stroke","undefined","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2JAaMA,EAAU,SAACC,GAAD,kBAA2BA,EAAKC,QAAQC,EAAxC,YAA6CF,EAAKC,QAAQE,EAA1D,cAAiEH,EAAKI,QAAQF,EAA9E,YAAmFF,EAAKI,QAAQD,IAE1GE,EAAoB,WAAO,IAAD,EACbC,mBAAS,IADI,mBACxBC,EADwB,KACrBC,EADqB,KAGzBC,EAAgB,CACrBC,UAAU,EACVT,QAAS,CAAEC,EAAG,EAAGC,EAAG,GACpBC,QAAS,CAAEF,EAAG,EAAGC,EAAG,IANU,EAQPG,mBAASG,GARF,mBAQxBT,EARwB,KAQlBW,EARkB,KA6C/B,OAAO,qBACNC,MAAO,CAAEC,MAAO,SAAUC,OAAQ,QAASC,WAAY,QACvDC,YArCmB,SAACC,GACJ,IAAbA,EAAEC,SACJD,EAAEE,kBACFR,EAAQ,CACPD,UAAU,EACVT,QAAS,CACRC,EAAGe,EAAEG,QACLjB,EAAGc,EAAEI,SAENjB,QAAS,CACRF,EAAGe,EAAEG,QACLjB,EAAGc,EAAEI,aA2BRC,YAtBmB,SAACL,GACjBjB,EAAKU,UACPC,EAAQ,2BACJX,GADG,IAENI,QAAS,CACRF,EAAGe,EAAEG,QACLjB,EAAGc,EAAEI,aAiBRE,UAXiB,SAACN,GACfjB,EAAKU,WACPF,EAAKD,EAAIR,EAAQC,IACjBW,EAAQF,KAIH,SAML,sBAAKe,MAAM,6BAA6BC,QAAQ,eAAhD,UACC,sBAAMC,OAAO,QAAQnB,EAAGA,IAEvBP,EAAKU,SACJ,sBAAMgB,OAAO,QAAQnB,EAAGR,EAAQC,UAC7B2B,QAcMC,EARQ,WACrB,OACA,8BACC,cAAC,EAAD,OC5EHC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.51093f29.chunk.js","sourcesContent":["import React, { useState }  from 'react';\n\ninterface Vector {\n\tx: Number;\n\ty: Number;\n}\n\ninterface Draggable {\n\tdragging: Boolean;\n\tinitial: Vector;\n\tcurrent: Vector;\n}\n\nconst dString = (drag : Draggable) => `M ${drag.initial.x} ${drag.initial.y} L ${drag.current.x} ${drag.current.y}`;\n\nconst Canvas : React.FC = () => {\n\tconst [d, setD] = useState('');\n\n\tconst initialState =  {\n\t\tdragging: false,\n\t\tinitial: { x: 0, y: 0 },\n\t\tcurrent: { x: 0, y: 0 },\n\t};\n\tconst [drag, setDrag] = useState(initialState);\n\n\tconst onMouseDown = (e : React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tif(e.button === 0) {\n\t\t\te.stopPropagation();\n\t\t\tsetDrag({\n\t\t\t\tdragging: true,\n\t\t\t\tinitial: {\n\t\t\t\t\tx: e.clientX,\n\t\t\t\t\ty: e.clientY,\n\t\t\t\t},\n\t\t\t\tcurrent: {\n\t\t\t\t\tx: e.clientX,\n\t\t\t\t\ty: e.clientY,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\tconst onMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tif(drag.dragging) {\n\t\t\tsetDrag({\n\t\t\t\t...drag,\n\t\t\t\tcurrent: {\n\t\t\t\t\tx: e.clientX,\n\t\t\t\t\ty: e.clientY,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t};\n\tconst onMouseUp = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tif(drag.dragging) {\n\t\t\tsetD(d + dString(drag));\n\t\t\tsetDrag(initialState);\n\t\t}\n\t};\n\n\treturn <div\n\t\tstyle={{ width: '1200px', height: '800px', background: '#eee' }}\n\t\tonMouseDown={onMouseDown}\n\t\tonMouseMove={onMouseMove}\n\t\tonMouseUp={onMouseUp}\n\t\t>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 800\">\n\t\t\t\t<path stroke='black' d={d}/>\n\t\t\t\t{\n\t\t\t\t\tdrag.dragging ? (\n\t\t\t\t\t\t<path stroke='black' d={dString(drag)} />\t\t\n\t\t\t\t\t) : undefined\n\t\t\t\t}\n\t\t\t</svg>\n\t\t</div>;\n};\n\nconst App : React.FC = () => {\n  return (\n\t\t<div>\n\t\t\t<Canvas />\n\t\t</div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}